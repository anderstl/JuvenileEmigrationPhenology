
  model {
    
    ## Priors and constraints
    for (i in 1:nind){
      for (t in f[i]:(n.occasions-1)){
        phi[i,t] <- (1/(1+exp(-(beta.a[group[i]] + beta.b*mass[i] + beta.t*temp[t] + beta.g*precip[t]+ beta.c[block[i]] + beta.d[pen[i]] + epsilon.phi[t])))) ^int[t]
        p[i,t] <- 1/(1+exp(-(beta.e[group[i]] + beta.m[m[i,t]] + beta.f*temp[t] + beta.h[block[i],t] + beta.j[pen[i],t] + epsilon.p[t])))
      } #t
    } #i
    
    
    for (b in 1:nblock){
      beta.c[b] ~ dnorm(0,tau.beta.c)      #Prior for logit of mean survival with random effect of block (random effect of block on phi)
    }
    sigma.beta.c~dunif(0,5)
    tau.beta.c<-pow(sigma.beta.c,-2)
    sigma2.beta.c <- pow(sigma.beta.c, 2)
    
    for (p in 1:npen){
      beta.d[p] ~ dnorm(0,tau.beta.d)    #Prior for logit of mean survival with random effect of pen given block
    }
    sigma.beta.d~dunif(0,5)
    tau.beta.d<-pow(sigma.beta.d,-2)
    sigma2.beta.d <- pow(sigma.beta.d, 2)
    
    beta.b ~ dnorm(0, 0.001)I(-10, 10)         # Prior for mass slope parameter

    for (u in 1:2){
      beta.m[u] ~ dunif(0, 1)        # Priors for time-specific recapture
    }
    
    
    #beta.a[1] <- 0                        # Corner constraints
    #beta.e[1] <- 0  
    for (u in 1:g){
      beta.e[u] ~ dnorm(0, 0.1)I(-10,10)          # Prior for group-spec. recapture
      beta.a[u] ~ dnorm(0, 0.1)I(-10,10)          # Prior for group-spec. survival
    } #g
    
    for (t in 1:(n.occasions-1)){
      epsilon.p[t] ~ dnorm(0, 0.1)I(-10,10)          # Prior for time on recapture
      epsilon.phi[t] ~ dnorm(0, 0.1)I(-10,10)          # Prior for time on survival
    }
    
    for (b in 1:nblock){
      for (t in 1:(n.occasions-1)){
        beta.h[b,t] ~ dnorm(0,tau.beta.h)      #Prior for logit of mean recapture with random effect of block (random effect of block on p)
      }
    }
    sigma.beta.h~dunif(0,5)
    tau.beta.h<-pow(sigma.beta.h,-2)
    sigma2.beta.h <- pow(sigma.beta.h, 2)
    
    for (p in 1:npen){
      for (t in 1:(n.occasions-1)){
        beta.j[p,t] ~ dnorm(0,tau.beta.j)    #Prior for logit of mean recapture with random effect of pen given block
      }
    }
    sigma.beta.j~dunif(0,5)
    tau.beta.j<-pow(sigma.beta.j,-2)
    sigma2.beta.j <- pow(sigma.beta.j, 2)

    beta.f ~ dnorm(0, 0.001)I(-10, 10)         # Prior for temp slope parameter on recapture
    beta.t ~ dnorm(0, 0.001)I(-10, 10)         # Prior for temp slope parameter on survival
    beta.g ~ dnorm(0, 0.001)I(-10, 10)         # Prior for precip slope parameter on survival

    
    # Likelihood 
    for (i in 1:nind){
    # Define latent state at first capture
      z[i,f[i]] <- 1
      for (t in (f[i]+1):n.occasions){
        # State process
        z[i,t] ~ dbern(mu1[i,t])
        mu1[i,t] <- phi[i,t-1] * z[i,t-1]
        # Observation process
        y[i,t] ~ dbern(mu2[i,t])
        mu2[i,t] <- p[i,t-1] * z[i,t]
      } #t
    } #i
  }

[1] 0.9102719
[1] 0.952737
[1] 0.09672725
[1] 0.9858986
[1] 0.8906689 0.9309158 0.9121196 0.9073834
[1] 0.4616946
[1] 0.4340208
[1] 0.2360716
[1] 0.4616946
[1] 0.4340208
[1] 0.4340208
